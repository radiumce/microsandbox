# Example GitHub Actions workflow for building microsandbox
# This demonstrates how to use the simplified build process in CI/CD

name: Build Example

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        components: rustfmt, clippy
        
    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        
    - name: Install system dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y patchelf bc libelf-dev gcc flex bison
        
    - name: Install system dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        brew tap slp/krun
        brew install krunvm
        
    - name: Install Python dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install pyelftools
        
    - name: Build with simplified script
      run: |
        chmod +x scripts/ci_build.sh
        ./scripts/ci_build.sh --skip-tests
        
    - name: Run tests
      run: |
        cargo test --all --release
        
    - name: Test basic functionality
      run: |
        export PATH="$PWD/build:$PATH"
        if [[ "$RUNNER_OS" == "macOS" ]]; then
          export DYLD_LIBRARY_PATH="$PWD/build:$DYLD_LIBRARY_PATH"
        else
          export LD_LIBRARY_PATH="$PWD/build:$LD_LIBRARY_PATH"
        fi
        ./build/msb --version
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: microsandbox-${{ runner.os }}
        path: |
          build/msb
          build/msbrun  
          build/msbserver
          build/*.dylib
          build/*.so.*
        retention-days: 7